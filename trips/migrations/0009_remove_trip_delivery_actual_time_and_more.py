# Generated by Django 4.2.7 on 2025-10-16 11:59

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('trips', '0008_trip_delivery_actual_time_trip_delivery_address_and_more'),
    ]

    operations = [
        migrations.RemoveField(
            model_name='trip',
            name='delivery_actual_time',
        ),
        migrations.RemoveField(
            model_name='trip',
            name='delivery_address',
        ),
        migrations.RemoveField(
            model_name='trip',
            name='delivery_company',
        ),
        migrations.RemoveField(
            model_name='trip',
            name='delivery_contact',
        ),
        migrations.RemoveField(
            model_name='trip',
            name='delivery_latitude',
        ),
        migrations.RemoveField(
            model_name='trip',
            name='delivery_longitude',
        ),
        migrations.RemoveField(
            model_name='trip',
            name='delivery_notes',
        ),
        migrations.RemoveField(
            model_name='trip',
            name='delivery_photo',
        ),
        migrations.RemoveField(
            model_name='trip',
            name='delivery_planned_time',
        ),
        migrations.RemoveField(
            model_name='trip',
            name='delivery_signature',
        ),
        migrations.RemoveField(
            model_name='trip',
            name='pickup_actual_time',
        ),
        migrations.RemoveField(
            model_name='trip',
            name='pickup_address',
        ),
        migrations.RemoveField(
            model_name='trip',
            name='pickup_company',
        ),
        migrations.RemoveField(
            model_name='trip',
            name='pickup_contact',
        ),
        migrations.RemoveField(
            model_name='trip',
            name='pickup_latitude',
        ),
        migrations.RemoveField(
            model_name='trip',
            name='pickup_longitude',
        ),
        migrations.RemoveField(
            model_name='trip',
            name='pickup_notes',
        ),
        migrations.RemoveField(
            model_name='trip',
            name='pickup_planned_time',
        ),
        migrations.AddField(
            model_name='trip',
            name='has_segments',
            field=models.BooleanField(default=False, help_text='Indique si ce voyage a des segments (ramassage/livraison)'),
        ),
        migrations.AddField(
            model_name='trip',
            name='is_continuous_eld',
            field=models.BooleanField(default=True, help_text="Indique si ce voyage utilise l'ELD en mode continu"),
        ),
        migrations.AlterField(
            model_name='trip',
            name='status',
            field=models.CharField(choices=[('PLANNED', 'Planifié'), ('IN_PROGRESS', 'En cours'), ('COMPLETED', 'Terminé'), ('CANCELLED', 'Annulé')], default='PLANNED', help_text='Statut actuel du voyage', max_length=15),
        ),
        migrations.CreateModel(
            name='TripSegment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('sequence_number', models.PositiveIntegerField(help_text='Ordre de ce segment dans le voyage (1, 2, 3...)')),
                ('segment_type', models.CharField(choices=[('PICKUP', 'Ramassage'), ('DELIVERY', 'Livraison'), ('TRANSFER', 'Transfert'), ('REPOSITIONING', 'Repositionnement')], default='PICKUP', max_length=20)),
                ('status', models.CharField(choices=[('PLANNED', 'Planifié'), ('EN_ROUTE', 'En route'), ('ARRIVED', 'Arrivé'), ('LOADING', 'Chargement'), ('UNLOADING', 'Déchargement'), ('COMPLETED', 'Terminé'), ('DELAYED', 'Retardé'), ('CANCELLED', 'Annulé')], default='PLANNED', max_length=20)),
                ('origin_name', models.CharField(help_text='Nom du lieu de départ', max_length=200)),
                ('origin_address', models.TextField(help_text='Adresse complète de départ')),
                ('origin_city', models.CharField(max_length=100)),
                ('origin_state', models.CharField(max_length=50)),
                ('origin_zip', models.CharField(max_length=20)),
                ('origin_latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('origin_longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('destination_name', models.CharField(help_text='Nom du lieu de destination', max_length=200)),
                ('destination_address', models.TextField(help_text='Adresse complète de destination')),
                ('destination_city', models.CharField(max_length=100)),
                ('destination_state', models.CharField(max_length=50)),
                ('destination_zip', models.CharField(max_length=20)),
                ('destination_latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('destination_longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('planned_departure', models.DateTimeField(help_text='Heure de départ prévue')),
                ('actual_departure', models.DateTimeField(blank=True, help_text='Heure de départ réelle', null=True)),
                ('planned_arrival', models.DateTimeField(help_text="Heure d'arrivée prévue")),
                ('actual_arrival', models.DateTimeField(blank=True, help_text="Heure d'arrivée réelle", null=True)),
                ('estimated_loading_time', models.DurationField(blank=True, help_text='Temps estimé pour le chargement/déchargement', null=True)),
                ('actual_loading_time', models.DurationField(blank=True, help_text='Temps réel de chargement/déchargement', null=True)),
                ('loading_start_time', models.DateTimeField(blank=True, null=True)),
                ('loading_end_time', models.DateTimeField(blank=True, null=True)),
                ('planned_distance_miles', models.DecimalField(blank=True, decimal_places=2, help_text='Distance prévue en miles', max_digits=8, null=True)),
                ('actual_distance_miles', models.DecimalField(blank=True, decimal_places=2, help_text='Distance réelle parcourue en miles', max_digits=8, null=True)),
                ('odometer_start', models.IntegerField(blank=True, null=True)),
                ('odometer_end', models.IntegerField(blank=True, null=True)),
                ('cargo_description', models.TextField(blank=True, help_text='Description de la cargaison')),
                ('cargo_weight', models.DecimalField(blank=True, decimal_places=2, help_text='Poids de la cargaison en livres', max_digits=10, null=True)),
                ('bill_of_lading', models.CharField(blank=True, help_text='Numéro de connaissement', max_length=100)),
                ('special_instructions', models.TextField(blank=True, help_text='Instructions spéciales pour ce segment')),
                ('contact_name', models.CharField(blank=True, max_length=100)),
                ('contact_phone', models.CharField(blank=True, max_length=20)),
                ('contact_email', models.EmailField(blank=True, max_length=254)),
                ('notes', models.TextField(blank=True)),
                ('delay_reason', models.TextField(blank=True, help_text='Raison du retard si applicable')),
                ('signature_data', models.TextField(blank=True, help_text='Données de signature numérique')),
                ('signed_by_name', models.CharField(blank=True, max_length=200)),
                ('signed_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='trip_segments_created', to=settings.AUTH_USER_MODEL)),
                ('trip', models.ForeignKey(help_text='Voyage auquel appartient ce segment', on_delete=django.db.models.deletion.CASCADE, related_name='segments', to='trips.trip')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='trip_segments_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['trip', 'sequence_number'],
            },
        ),
        migrations.CreateModel(
            name='SegmentStop',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('stop_type', models.CharField(choices=[('FUEL', 'Ravitaillement'), ('REST', 'Repos'), ('MEAL', 'Repas'), ('INSPECTION', 'Inspection'), ('WEIGH_STATION', 'Pesée'), ('MAINTENANCE', 'Maintenance'), ('EMERGENCY', 'Urgence'), ('OTHER', 'Autre')], default='REST', max_length=20)),
                ('location_name', models.CharField(help_text="Nom du lieu d'arrêt", max_length=200)),
                ('address', models.TextField(blank=True)),
                ('city', models.CharField(blank=True, max_length=100)),
                ('state', models.CharField(blank=True, max_length=50)),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('arrival_time', models.DateTimeField(help_text="Heure d'arrivée à l'arrêt")),
                ('departure_time', models.DateTimeField(blank=True, help_text="Heure de départ de l'arrêt", null=True)),
                ('odometer_reading', models.IntegerField(blank=True, null=True)),
                ('fuel_gallons', models.DecimalField(blank=True, decimal_places=2, help_text='Gallons de carburant ajoutés', max_digits=6, null=True)),
                ('fuel_cost', models.DecimalField(blank=True, decimal_places=2, help_text='Coût du carburant', max_digits=8, null=True)),
                ('notes', models.TextField(blank=True)),
                ('receipt_image', models.ImageField(blank=True, help_text='Photo du reçu', null=True, upload_to='trip_stops/receipts/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='segment_stops_created', to=settings.AUTH_USER_MODEL)),
                ('segment', models.ForeignKey(help_text="Segment durant lequel l'arrêt a eu lieu", on_delete=django.db.models.deletion.CASCADE, related_name='stops', to='trips.tripsegment')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='segment_stops_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['arrival_time'],
            },
        ),
        migrations.CreateModel(
            name='ContinuousDutyStatus',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('status', models.CharField(choices=[('OFF_DUTY', 'Hors service'), ('SLEEPER_BERTH', 'Couchette'), ('DRIVING', 'Conduite'), ('ON_DUTY_NOT_DRIVING', 'En service (non-conduite)')], max_length=25)),
                ('start_time', models.DateTimeField(db_index=True)),
                ('end_time', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('event_type', models.CharField(choices=[('AUTO', 'Automatique'), ('MANUAL', 'Manuel'), ('EDITED', 'Modifié'), ('CERTIFIED', 'Certifié')], default='AUTO', help_text='Comment cet événement a été créé', max_length=15)),
                ('location_description', models.CharField(max_length=200)),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('odometer_reading', models.IntegerField(blank=True, null=True)),
                ('engine_hours', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('remarks', models.TextField(blank=True)),
                ('is_edited', models.BooleanField(default=False)),
                ('edit_reason', models.CharField(blank=True, max_length=200)),
                ('original_status', models.CharField(blank=True, max_length=25)),
                ('original_start_time', models.DateTimeField(blank=True, null=True)),
                ('original_end_time', models.DateTimeField(blank=True, null=True)),
                ('is_certified', models.BooleanField(default=False)),
                ('certified_at', models.DateTimeField(blank=True, null=True)),
                ('edited_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='continuous_duty_created', to=settings.AUTH_USER_MODEL)),
                ('driver', models.ForeignKey(limit_choices_to={'user_type': 'DRIVER'}, on_delete=django.db.models.deletion.CASCADE, related_name='continuous_duty_statuses', to=settings.AUTH_USER_MODEL)),
                ('edited_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='continuous_duty_edited', to=settings.AUTH_USER_MODEL)),
                ('segment_stop', models.ForeignKey(blank=True, help_text='Arrêt associé à ce changement de statut', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='duty_statuses', to='trips.segmentstop')),
                ('trip_segment', models.ForeignKey(blank=True, help_text='Segment de voyage durant lequel ce statut est actif', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='duty_statuses', to='trips.tripsegment')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='continuous_duty_updated', to=settings.AUTH_USER_MODEL)),
                ('vehicle', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='duty_statuses', to='trips.vehicle')),
            ],
            options={
                'verbose_name_plural': 'Continuous duty statuses',
                'ordering': ['-start_time'],
            },
        ),
        migrations.AddIndex(
            model_name='tripsegment',
            index=models.Index(fields=['trip', 'sequence_number'], name='trips_trips_trip_id_9ca07a_idx'),
        ),
        migrations.AddIndex(
            model_name='tripsegment',
            index=models.Index(fields=['status'], name='trips_trips_status_1bf8f7_idx'),
        ),
        migrations.AddIndex(
            model_name='tripsegment',
            index=models.Index(fields=['planned_departure'], name='trips_trips_planned_91cb11_idx'),
        ),
        migrations.AddIndex(
            model_name='tripsegment',
            index=models.Index(fields=['actual_departure'], name='trips_trips_actual__7f4ffe_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='tripsegment',
            unique_together={('trip', 'sequence_number')},
        ),
        migrations.AddIndex(
            model_name='segmentstop',
            index=models.Index(fields=['segment', 'arrival_time'], name='trips_segme_segment_99463c_idx'),
        ),
        migrations.AddIndex(
            model_name='segmentstop',
            index=models.Index(fields=['stop_type'], name='trips_segme_stop_ty_c9a4f9_idx'),
        ),
        migrations.AddIndex(
            model_name='continuousdutystatus',
            index=models.Index(fields=['driver', 'start_time'], name='trips_conti_driver__1a6cf3_idx'),
        ),
        migrations.AddIndex(
            model_name='continuousdutystatus',
            index=models.Index(fields=['driver', 'end_time'], name='trips_conti_driver__d90285_idx'),
        ),
        migrations.AddIndex(
            model_name='continuousdutystatus',
            index=models.Index(fields=['trip_segment', 'start_time'], name='trips_conti_trip_se_9c2861_idx'),
        ),
        migrations.AddIndex(
            model_name='continuousdutystatus',
            index=models.Index(fields=['status', 'start_time'], name='trips_conti_status_77dd1c_idx'),
        ),
        migrations.AddIndex(
            model_name='continuousdutystatus',
            index=models.Index(fields=['is_certified'], name='trips_conti_is_cert_ab2608_idx'),
        ),
    ]
